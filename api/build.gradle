plugins {
    id 'java'
    // This time we're building a command-line executable application.
    id 'application'
}

repositories {
    jcenter()
}

dependencies {

    // Use the Jersey framework to make writing and testing servlets easier.
    implementation 'org.glassfish.jersey.containers:jersey-container-servlet-core:+'
    implementation 'org.glassfish.jersey.containers:jersey-container-jetty-http:+'
    implementation 'org.glassfish.jersey.core:jersey-server:+'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:+'
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:+'
    // Use Jakarta (Java EE) for the servlet primitives.
    implementation 'jakarta.servlet:jakarta.servlet-api:5.+'
    // Use the Jetty server.
    implementation 'org.eclipse.jetty:jetty-server:11+'
    implementation 'org.eclipse.jetty:jetty-servlet:11+'
    implementation 'org.eclipse.jetty:jetty-webapp:11+'
    // We want to have some logging output if things go wrong, so use the simple console logger from SLF4J.
    // In our simple use case, the logger gets automatically configured by simply existing.
    implementation 'org.slf4j:slf4j-simple:+'

    // This dependency provides the Java Persistence API (JPA) specification.
    implementation 'javax.persistence:javax.persistence-api:2.2'

    // Hibernate is a JPA implementation that provides a framework for mapping Java objects to database tables and managing database interactions. 
    implementation 'org.hibernate:hibernate-core:5.5.6.Final'

    //for the database
    implementation 'mysql:mysql-connector-java:8.0.28'

    // Reference the domain subproject.
    implementation project(':domain')
    implementation project(':persistence')

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    // Also use the Mockito mocking framework to mock simple server functionality.
    testImplementation "org.mockito:mockito-core:2.+"

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

application {
    // Define the main class for the application.
    mainClassName = 'stratego.App'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}


