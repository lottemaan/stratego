plugins {
    // Tell Gradle that we are building java as a library (non-executable piece of code intended for use by other applications).
    id 'java'
    id 'java-library'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testRuntimeOnly "org.junit.platform:junit-platform-commons:1.8.2"
}

test {
    // For running our tests, use the test runner provided by JUnit.
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}


jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

jacoco {
    toolVersion = "0.8.9"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

task createArtifact(type: Jar) {
    from sourceSets.main.output
    archiveFileName = "${project.name}-${project.version}.jar"
}
